package kr.or.ddit.rmi.inf;

import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.util.Vector;

import kr.or.ddit.rmi.inf.ChatClient;
import kr.or.ddit.rmi.inf.ChatServer;

public class ChatServerImpl extends UnicastRemoteObject  implements ChatServer{
   
   Vector<ChatClient> clientList = new Vector<>();

   protected ChatServerImpl() throws RemoteException {
      super();

   }

   @Override
   public void addClient(ChatClient client, String name) throws RemoteException {
      clientList.add(client);
      
      say(name + "님이 접속하셨습니다.");
      
      System.out.println("새로운 접속자 추가됨 :    " + clientList.size());
   }

   @Override
   public void disconnect(ChatClient client, String name) throws RemoteException {
      int i =clientList.indexOf(client);
      if(i>=0) {
         say(name + "님이 퇴장하셨습니다.");
         clientList.removeElementAt(i);
         System.out.println("사용자 나갔습니다. : "+ clientList.size());
      }else {
         System.out.println("해당 사용자가 존재하지 않습니다.");
      }   
   }

   @Override
   public void say(String message) throws RemoteException {
      int numOfConnect = clientList.size();
      
      for(int i=0; i< numOfConnect; i++) {
         ((ChatClient)clientList.elementAt(i)).printMessage(message);
      }
      
   }

}